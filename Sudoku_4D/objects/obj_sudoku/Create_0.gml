//SETUP
randomize();

//TEXT
draw_set_halign(fa_center);
draw_set_valign(fa_middle);
draw_set_color(c_black);

//OUTPUT
file=file_text_open_write("sudokutimes.txt");
file_text_close(file);

//HARDCODED DATA
_order_xy=[	0,4,8,12,48,52,56,60,16,17,18,19,64,65,66,67,
			1,5,9,13,49,53,57,61,20,21,22,23,68,69,70,71,
			2,6,10,14,50,54,58,62,24,25,26,27,72,73,74,75,
			3,7,11,15,51,55,59,63,28,29,30,31,76,77,78,79,
			32,36,40,44,80,84,88,92,0,1,2,3,48,49,50,51,
			33,37,41,45,81,85,89,93,4,5,6,7,52,53,54,55,
			34,38,42,46,82,86,90,94,8,9,10,11,56,57,58,59,
			35,39,43,47,83,87,91,95,12,13,14,15,60,61,62,63,
			16,20,24,28,64,68,72,76,32,33,34,35,80,81,82,83,
			17,21,25,29,65,69,73,77,36,37,38,39,84,85,86,87,
			18,22,26,30,66,70,74,78,40,41,42,43,88,89,90,91,
			19,23,27,31,67,71,75,79,44,45,46,47,92,93,94,95];
			
_value_x=[	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
			1,2,3,4,1,2,3,4,1,2,3,4,1,2,3,4,
			1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,
			5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,
			1,2,3,4,1,2,3,4,1,2,3,4,1,2,3,4,
			1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4];
_value_y=[	1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,
			0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
			1,2,3,4,1,2,3,4,1,2,3,4,1,2,3,4,
			1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,
			5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,
			1,2,3,4,1,2,3,4,1,2,3,4,1,2,3,4];
_value_z=[	1,2,3,4,1,2,3,4,1,2,3,4,1,2,3,4,
			1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,
			0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
			1,2,3,4,1,2,3,4,1,2,3,4,1,2,3,4,
			1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,
			5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5];

_reduced_peers=ds_list_create();
for(var i=16;i<96;i++) {
	_reduced_peers[| i]=ds_list_create();
	for(var j=0;j<i;j++) {
		if(square_is_peer(i,j)) {
			ds_list_add(_reduced_peers[| i],j);
		}
	}
}

_peers=ds_list_create();
for(var i=0;i<96;i++) {
	check[i]=0;
	_peers[| i]=ds_list_create();
	for(var j=0;j<96;j++) {
		if(square_is_peer(i,j)) {
			ds_list_add(_peers[| i],j);
		}
	}
}
_values=ds_list_create();
ds_list_add(_values,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16);

//INIT VARIABLES
counter=0;
square=0;
step=0;
time=get_timer()/1000;

for(var i=0;i<96;i++) {
    solution[i]=0;
	puzzle[i]=0;
}


test1=0;
test2=0;
test3=0;