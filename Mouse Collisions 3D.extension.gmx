<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<extension>
  <name>Mouse Collisions 3D</name>
  <version>1.0.1</version>
  <packageID>com.binskified.m3d</packageID>
  <ProductID>1A40DFD526256C598B90754DCC04C43B</ProductID>
  <date>8/9/2015</date>
  <license>Free to use, also for commercial games.</license>
  <description></description>
  <helpfile></helpfile>
  <androidProps>0</androidProps>
  <iosProps>0</iosProps>
  <installdir></installdir>
  <classname></classname>
  <androidclassname></androidclassname>
  <sourcedir></sourcedir>
  <androidsourcedir></androidsourcedir>
  <macsourcedir></macsourcedir>
  <maclinkerflags></maclinkerflags>
  <maccompilerflags></maccompilerflags>
  <androidinject></androidinject>
  <iosSystemFrameworks/>
  <iosThirdPartyFrameworks/>
  <androidPermissions/>
  <IncludedResources/>
  <files>
    <file>
      <filename>Mouse 3D Pointer.gml</filename>
      <origname>extensions\Mouse 3D Pointer.gml</origname>
      <init>__shidden_m3d_init</init>
      <final></final>
      <kind>2</kind>
      <uncompress>0</uncompress>
      <ConfigOptions>
        <Config name="Default">
          <CopyToMask>17593242063086</CopyToMask>
        </Config>
      </ConfigOptions>
      <ProxyFiles/>
      <functions>
        <function>
          <name>__shidden_m3d_init</name>
          <externalName>__shidden_m3d_init</externalName>
          <kind>11</kind>
          <help></help>
          <returnType>2</returnType>
          <argCount>0</argCount>
          <args/>
        </function>
        <function>
          <name>m3d_pointer_create</name>
          <externalName>m3d_pointer_create</externalName>
          <kind>11</kind>
          <help>m3d_pointer_create()</help>
          <returnType>2</returnType>
          <argCount>0</argCount>
          <args/>
        </function>
        <function>
          <name>m3d_pointer_setpos</name>
          <externalName>m3d_pointer_setpos</externalName>
          <kind>11</kind>
          <help>m3d_pointer_setpos(id, x, y)</help>
          <returnType>2</returnType>
          <argCount>3</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>m3d_pointer_get_x</name>
          <externalName>m3d_pointer_get_x</externalName>
          <kind>11</kind>
          <help>m3d_pointer_get_x(id)</help>
          <returnType>2</returnType>
          <argCount>1</argCount>
          <args>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>m3d_pointer_get_y</name>
          <externalName>m3d_pointer_get_y</externalName>
          <kind>11</kind>
          <help>m3d_pointer_get_y(id)</help>
          <returnType>2</returnType>
          <argCount>1</argCount>
          <args>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>m3d_pointer_destroy</name>
          <externalName>m3d_pointer_destroy</externalName>
          <kind>11</kind>
          <help>m3d_pointer_destroy(id)</help>
          <returnType>2</returnType>
          <argCount>1</argCount>
          <args>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>m3d_projection_create</name>
          <externalName>m3d_projection_create</externalName>
          <kind>11</kind>
          <help>m3d_projection_create(xport, yport, wport, hport)</help>
          <returnType>2</returnType>
          <argCount>4</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>m3d_projection_destroy</name>
          <externalName>m3d_projection_destroy</externalName>
          <kind>11</kind>
          <help>m3d_projection_destroy(id)</help>
          <returnType>2</returnType>
          <argCount>1</argCount>
          <args>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>m3d_projection_define</name>
          <externalName>m3d_projection_define</externalName>
          <kind>11</kind>
          <help>m3d_projection_define(id, xfrom, yfrom, zfrom, xto, yto, zto, xup, yup, zup, angle, aspect)</help>
          <returnType>2</returnType>
          <argCount>12</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>m3d_projection_calculate</name>
          <externalName>m3d_projection_calculate</externalName>
          <kind>11</kind>
          <help>m3d_projection_calculate(projection id, pointer id)</help>
          <returnType>2</returnType>
          <argCount>2</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>m3d_projection_draw</name>
          <externalName>m3d_projection_draw</externalName>
          <kind>11</kind>
          <help>m3d_projection_draw(id, near, far)</help>
          <returnType>2</returnType>
          <argCount>3</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>m3d_projection_collision_get_x</name>
          <externalName>m3d_projection_collision_get_x</externalName>
          <kind>11</kind>
          <help>m3d_projection_collision_get_x(id)</help>
          <returnType>2</returnType>
          <argCount>1</argCount>
          <args>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>m3d_projection_collision_get_y</name>
          <externalName>m3d_projection_collision_get_y</externalName>
          <kind>11</kind>
          <help>m3d_projection_collision_get_y(id)</help>
          <returnType>2</returnType>
          <argCount>1</argCount>
          <args>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>m3d_projection_collision_get_z</name>
          <externalName>m3d_projection_collision_get_z</externalName>
          <kind>11</kind>
          <help>m3d_projection_collision_get_z(id)</help>
          <returnType>2</returnType>
          <argCount>1</argCount>
          <args>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>m3d_intersect_triangle</name>
          <externalName>m3d_intersect_triangle</externalName>
          <kind>11</kind>
          <help>m3d_intersect_triangle([ARRAY] pVec, x1, y1, z1, x2, y2, z2, x3, y3, z3)</help>
          <returnType>2</returnType>
          <argCount>10</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>m3d_intersect_plane</name>
          <externalName>m3d_intersect_plane</externalName>
          <kind>11</kind>
          <help>m3d_intersect_plane([ARRAY] pVec, vx1, vy1, vz1, vx2, vy2, vz2, px, py, pz)</help>
          <returnType>2</returnType>
          <argCount>10</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
      </functions>
      <constants/>
    </file>
    <file>
      <filename>Documentation.pdf</filename>
      <origname>extensions\Documentation.pdf</origname>
      <init></init>
      <final></final>
      <kind>4</kind>
      <uncompress>0</uncompress>
      <ConfigOptions>
        <Config name="Default">
          <CopyToMask>0</CopyToMask>
        </Config>
      </ConfigOptions>
      <ProxyFiles/>
      <functions/>
      <constants/>
    </file>
  </files>
</extension>
